// Copyright 2010 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1
//   Build date: 2017-01-11 18:31:16 UTC
//   on: 2017-01-18, 05:15:31 UTC
//   C++ generator version: 0.1.4

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Compute Engine API (compute/v1)
// Generated from:
//   Version: v1
//   Revision: 133
// Generated by:
//    Tool: google-apis-code-generator 1.5.1
//     C++: 0.1.4
#ifndef  GOOGLE_COMPUTE_API_HEALTH_CHECK_REFERENCE_H_
#define  GOOGLE_COMPUTE_API_HEALTH_CHECK_REFERENCE_H_

#include <string>
#include "googleapis/base/macros.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"

namespace Json {
class Value;
}  // namespace Json

namespace google_compute_api {
using namespace googleapis;

/**
 * A full or valid partial URL to a health check. For example, the following are
 * valid URLs:
 * <dl>
 * <dt>https://www.googleapis.com/compute/beta/projects/project-
 * id/global/httpHealthChecks/health-check
 * <dd>projects/project-id/global/httpHealthChecks/health-check.
 * <dt>global/httpHealthChecks/health
 * <dd>check.
 * </dl>
 *
 *
 * @ingroup DataObject
 */
class HealthCheckReference : public client::JsonCppData {
 public:
  /**
   * Creates a new default instance.
   *
   * @return Ownership is passed back to the caller.
   */
  static HealthCheckReference* New();

  /**
   * Standard constructor for an immutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit HealthCheckReference(const Json::Value& storage);

  /**
   * Standard constructor for a mutable data object instance.
   *
   * @param[in] storage  The underlying data storage for this instance.
   */
  explicit HealthCheckReference(Json::Value* storage);

  /**
   * Standard destructor.
   */
  virtual ~HealthCheckReference();

  /**
   * Returns a string denoting the type of this data object.
   *
   * @return <code>google_compute_api::HealthCheckReference</code>
   */
  const StringPiece GetTypeName() const {
    return StringPiece("google_compute_api::HealthCheckReference");
  }

  /**
   * Determine if the '<code>healthCheck</code>' attribute was set.
   *
   * @return true if the '<code>healthCheck</code>' attribute was set.
   */
  bool has_health_check() const {
    return Storage().isMember("healthCheck");
  }

  /**
   * Clears the '<code>healthCheck</code>' attribute.
   */
  void clear_health_check() {
    MutableStorage()->removeMember("healthCheck");
  }


  /**
   * Get the value of the '<code>healthCheck</code>' attribute.
   */
  const StringPiece get_health_check() const {
    const Json::Value& v = Storage("healthCheck");
    if (v == Json::Value::null) return StringPiece("");
    return StringPiece(v.asCString());
  }

  /**
   * Change the '<code>healthCheck</code>' attribute.
   * @param[in] value The new value.
   */
  void set_health_check(const StringPiece& value) {
    *MutableStorage("healthCheck") = value.data();
  }

 private:
  void operator=(const HealthCheckReference&);
};  // HealthCheckReference
}  // namespace google_compute_api
#endif  // GOOGLE_COMPUTE_API_HEALTH_CHECK_REFERENCE_H_
